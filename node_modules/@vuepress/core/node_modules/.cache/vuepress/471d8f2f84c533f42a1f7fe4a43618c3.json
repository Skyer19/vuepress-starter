{"remainingRequest":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/follow-redirects/index.js","dependencies":[{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/follow-redirects/index.js","mtime":1661658719158},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1661658709451},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js","mtime":1661658709446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["url","require","URL","http","https","Writable","assert","debug","events","eventHandlers","Object","create","forEach","event","arg1","arg2","arg3","_redirectable","emit","RedirectionError","createErrorType","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","RedirectableRequest","options","responseCallback","call","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","on","self","_onNativeResponse","response","_processResponse","_performRequest","prototype","abort","abortRequest","_currentRequest","write","data","encoding","callback","TypeError","length","maxBodyLength","push","end","currentRequest","setHeader","name","value","headers","removeHeader","setTimeout","msecs","destroyOnTimeout","socket","removeListener","destroy","addListener","startTimer","_timeout","clearTimeout","clearTimer","once","method","a","b","property","defineProperty","get","host","hostname","pathname","path","searchPos","indexOf","substring","search","protocol","nativeProtocol","nativeProtocols","agents","scheme","slice","agent","request","_currentUrl","test","format","_isRedirect","i","buffers","writeNext","error","buffer","finished","statusCode","trackRedirects","location","followRedirects","responseUrl","redirects","maxRedirects","requestHeaders","beforeRedirect","assign","Host","req","getHeader","removeMatchingHeaders","currentHostHeader","currentUrlParts","parse","currentHost","currentUrl","redirectUrl","resolve","cause","redirectUrlParts","isSubdomain","responseDetails","requestDetails","err","wrap","protocols","exports","keys","wrappedProtocol","input","urlStr","urlToOptions","equal","wrappedRequest","defineProperties","configurable","enumerable","writable","noop","urlObject","startsWith","hash","href","port","Number","regex","lastValue","header","undefined","String","trim","code","defaultMessage","CustomError","Error","captureStackTrace","constructor","message","subdomain","domain","dot","endsWith","module"],"sources":["/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/follow-redirects/index.js"],"sourcesContent":["var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  abortRequest(this._currentRequest);\n  this.emit(\"abort\");\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\n  // a client MUST send only the absolute path […] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, […]\n    // a client MUST send the target URI in absolute-form […].\n    this._currentUrl = this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  abortRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    this.emit(\"error\", new TooManyRedirectsError());\n    return;\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = url.parse(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Determine the URL of the redirection\n  var redirectUrl;\n  try {\n    redirectUrl = url.resolve(currentUrl, location);\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n    return;\n  }\n\n  // Create the redirected request\n  debug(\"redirecting to\", redirectUrl);\n  this._isRedirect = true;\n  var redirectUrlParts = url.parse(redirectUrl);\n  Object.assign(this._options, redirectUrlParts);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrlParts.protocol !== currentUrlParts.protocol &&\n     redirectUrlParts.protocol !== \"https:\" ||\n     redirectUrlParts.host !== currentHost &&\n     !isSubdomain(redirectUrlParts.host, currentHost)) {\n    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (typeof beforeRedirect === \"function\") {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    try {\n      beforeRedirect(this._options, responseDetails, requestDetails);\n    }\n    catch (err) {\n      this.emit(\"error\", err);\n      return;\n    }\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  try {\n    this._performRequest();\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(cause) {\n    Error.captureStackTrace(this, this.constructor);\n    if (!cause) {\n      this.message = defaultMessage;\n    }\n    else {\n      this.message = defaultMessage + \": \" + cause.message;\n      this.cause = cause;\n    }\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.abort();\n}\n\nfunction isSubdomain(subdomain, domain) {\n  const dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n"],"mappings":"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"}]}