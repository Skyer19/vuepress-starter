{"remainingRequest":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/object-inspect/index.js","dependencies":[{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/object-inspect/index.js","mtime":1661658719637},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1661658709451},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js","mtime":1661658709446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZmxlY3QudG8tc3RyaW5nLXRhZy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLmNhdXNlLmpzIik7Cgp2YXIgaGFzTWFwID0gdHlwZW9mIE1hcCA9PT0gJ2Z1bmN0aW9uJyAmJiBNYXAucHJvdG90eXBlOwp2YXIgbWFwU2l6ZURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yICYmIGhhc01hcCA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTWFwLnByb3RvdHlwZSwgJ3NpemUnKSA6IG51bGw7CnZhciBtYXBTaXplID0gaGFzTWFwICYmIG1hcFNpemVEZXNjcmlwdG9yICYmIHR5cGVvZiBtYXBTaXplRGVzY3JpcHRvci5nZXQgPT09ICdmdW5jdGlvbicgPyBtYXBTaXplRGVzY3JpcHRvci5nZXQgOiBudWxsOwp2YXIgbWFwRm9yRWFjaCA9IGhhc01hcCAmJiBNYXAucHJvdG90eXBlLmZvckVhY2g7CnZhciBoYXNTZXQgPSB0eXBlb2YgU2V0ID09PSAnZnVuY3Rpb24nICYmIFNldC5wcm90b3R5cGU7CnZhciBzZXRTaXplRGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgJiYgaGFzU2V0ID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihTZXQucHJvdG90eXBlLCAnc2l6ZScpIDogbnVsbDsKdmFyIHNldFNpemUgPSBoYXNTZXQgJiYgc2V0U2l6ZURlc2NyaXB0b3IgJiYgdHlwZW9mIHNldFNpemVEZXNjcmlwdG9yLmdldCA9PT0gJ2Z1bmN0aW9uJyA/IHNldFNpemVEZXNjcmlwdG9yLmdldCA6IG51bGw7CnZhciBzZXRGb3JFYWNoID0gaGFzU2V0ICYmIFNldC5wcm90b3R5cGUuZm9yRWFjaDsKdmFyIGhhc1dlYWtNYXAgPSB0eXBlb2YgV2Vha01hcCA9PT0gJ2Z1bmN0aW9uJyAmJiBXZWFrTWFwLnByb3RvdHlwZTsKdmFyIHdlYWtNYXBIYXMgPSBoYXNXZWFrTWFwID8gV2Vha01hcC5wcm90b3R5cGUuaGFzIDogbnVsbDsKdmFyIGhhc1dlYWtTZXQgPSB0eXBlb2YgV2Vha1NldCA9PT0gJ2Z1bmN0aW9uJyAmJiBXZWFrU2V0LnByb3RvdHlwZTsKdmFyIHdlYWtTZXRIYXMgPSBoYXNXZWFrU2V0ID8gV2Vha1NldC5wcm90b3R5cGUuaGFzIDogbnVsbDsKdmFyIGhhc1dlYWtSZWYgPSB0eXBlb2YgV2Vha1JlZiA9PT0gJ2Z1bmN0aW9uJyAmJiBXZWFrUmVmLnByb3RvdHlwZTsKdmFyIHdlYWtSZWZEZXJlZiA9IGhhc1dlYWtSZWYgPyBXZWFrUmVmLnByb3RvdHlwZS5kZXJlZiA6IG51bGw7CnZhciBib29sZWFuVmFsdWVPZiA9IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2Y7CnZhciBvYmplY3RUb1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7CnZhciBmdW5jdGlvblRvU3RyaW5nID0gRnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nOwp2YXIgJG1hdGNoID0gU3RyaW5nLnByb3RvdHlwZS5tYXRjaDsKdmFyICRzbGljZSA9IFN0cmluZy5wcm90b3R5cGUuc2xpY2U7CnZhciAkcmVwbGFjZSA9IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZTsKdmFyICR0b1VwcGVyQ2FzZSA9IFN0cmluZy5wcm90b3R5cGUudG9VcHBlckNhc2U7CnZhciAkdG9Mb3dlckNhc2UgPSBTdHJpbmcucHJvdG90eXBlLnRvTG93ZXJDYXNlOwp2YXIgJHRlc3QgPSBSZWdFeHAucHJvdG90eXBlLnRlc3Q7CnZhciAkY29uY2F0ID0gQXJyYXkucHJvdG90eXBlLmNvbmNhdDsKdmFyICRqb2luID0gQXJyYXkucHJvdG90eXBlLmpvaW47CnZhciAkYXJyU2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7CnZhciAkZmxvb3IgPSBNYXRoLmZsb29yOwp2YXIgYmlnSW50VmFsdWVPZiA9IHR5cGVvZiBCaWdJbnQgPT09ICdmdW5jdGlvbicgPyBCaWdJbnQucHJvdG90eXBlLnZhbHVlT2YgOiBudWxsOwp2YXIgZ09QUyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7CnZhciBzeW1Ub1N0cmluZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gJ3N5bWJvbCcgPyBTeW1ib2wucHJvdG90eXBlLnRvU3RyaW5nIDogbnVsbDsKdmFyIGhhc1NoYW1tZWRTeW1ib2xzID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAnb2JqZWN0JzsgLy8gaWUsIGBoYXMtdG9zdHJpbmd0YWcvc2hhbXMKCnZhciB0b1N0cmluZ1RhZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLnRvU3RyaW5nVGFnICYmICh0eXBlb2YgU3ltYm9sLnRvU3RyaW5nVGFnID09PSBoYXNTaGFtbWVkU3ltYm9scyA/ICdvYmplY3QnIDogJ3N5bWJvbCcpID8gU3ltYm9sLnRvU3RyaW5nVGFnIDogbnVsbDsKdmFyIGlzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7CnZhciBnUE8gPSAodHlwZW9mIFJlZmxlY3QgPT09ICdmdW5jdGlvbicgPyBSZWZsZWN0LmdldFByb3RvdHlwZU9mIDogT2JqZWN0LmdldFByb3RvdHlwZU9mKSB8fCAoW10uX19wcm90b19fID09PSBBcnJheS5wcm90b3R5cGUgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wcm90bwo/IGZ1bmN0aW9uIChPKSB7CiAgcmV0dXJuIE8uX19wcm90b19fOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXByb3RvCn0gOiBudWxsKTsKCmZ1bmN0aW9uIGFkZE51bWVyaWNTZXBhcmF0b3IobnVtLCBzdHIpIHsKICBpZiAobnVtID09PSBJbmZpbml0eSB8fCBudW0gPT09IC1JbmZpbml0eSB8fCBudW0gIT09IG51bSB8fCBudW0gJiYgbnVtID4gLTEwMDAgJiYgbnVtIDwgMTAwMCB8fCAkdGVzdC5jYWxsKC9lLywgc3RyKSkgewogICAgcmV0dXJuIHN0cjsKICB9CgogIHZhciBzZXBSZWdleCA9IC9bMC05XSg/PSg/OlswLTldezN9KSsoPyFbMC05XSkpL2c7CgogIGlmICh0eXBlb2YgbnVtID09PSAnbnVtYmVyJykgewogICAgdmFyIGludCA9IG51bSA8IDAgPyAtJGZsb29yKC1udW0pIDogJGZsb29yKG51bSk7IC8vIHRydW5jKG51bSkKCiAgICBpZiAoaW50ICE9PSBudW0pIHsKICAgICAgdmFyIGludFN0ciA9IFN0cmluZyhpbnQpOwogICAgICB2YXIgZGVjID0gJHNsaWNlLmNhbGwoc3RyLCBpbnRTdHIubGVuZ3RoICsgMSk7CiAgICAgIHJldHVybiAkcmVwbGFjZS5jYWxsKGludFN0ciwgc2VwUmVnZXgsICckJl8nKSArICcuJyArICRyZXBsYWNlLmNhbGwoJHJlcGxhY2UuY2FsbChkZWMsIC8oWzAtOV17M30pL2csICckJl8nKSwgL18kLywgJycpOwogICAgfQogIH0KCiAgcmV0dXJuICRyZXBsYWNlLmNhbGwoc3RyLCBzZXBSZWdleCwgJyQmXycpOwp9Cgp2YXIgdXRpbEluc3BlY3QgPSByZXF1aXJlKCcuL3V0aWwuaW5zcGVjdCcpOwoKdmFyIGluc3BlY3RDdXN0b20gPSB1dGlsSW5zcGVjdC5jdXN0b207CnZhciBpbnNwZWN0U3ltYm9sID0gaXNTeW1ib2woaW5zcGVjdEN1c3RvbSkgPyBpbnNwZWN0Q3VzdG9tIDogbnVsbDsKCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5zcGVjdF8ob2JqLCBvcHRpb25zLCBkZXB0aCwgc2VlbikgewogIHZhciBvcHRzID0gb3B0aW9ucyB8fCB7fTsKCiAgaWYgKGhhcyhvcHRzLCAncXVvdGVTdHlsZScpICYmIG9wdHMucXVvdGVTdHlsZSAhPT0gJ3NpbmdsZScgJiYgb3B0cy5xdW90ZVN0eWxlICE9PSAnZG91YmxlJykgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uICJxdW90ZVN0eWxlIiBtdXN0IGJlICJzaW5nbGUiIG9yICJkb3VibGUiJyk7CiAgfQoKICBpZiAoaGFzKG9wdHMsICdtYXhTdHJpbmdMZW5ndGgnKSAmJiAodHlwZW9mIG9wdHMubWF4U3RyaW5nTGVuZ3RoID09PSAnbnVtYmVyJyA/IG9wdHMubWF4U3RyaW5nTGVuZ3RoIDwgMCAmJiBvcHRzLm1heFN0cmluZ0xlbmd0aCAhPT0gSW5maW5pdHkgOiBvcHRzLm1heFN0cmluZ0xlbmd0aCAhPT0gbnVsbCkpIHsKICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiAibWF4U3RyaW5nTGVuZ3RoIiwgaWYgcHJvdmlkZWQsIG11c3QgYmUgYSBwb3NpdGl2ZSBpbnRlZ2VyLCBJbmZpbml0eSwgb3IgYG51bGxgJyk7CiAgfQoKICB2YXIgY3VzdG9tSW5zcGVjdCA9IGhhcyhvcHRzLCAnY3VzdG9tSW5zcGVjdCcpID8gb3B0cy5jdXN0b21JbnNwZWN0IDogdHJ1ZTsKCiAgaWYgKHR5cGVvZiBjdXN0b21JbnNwZWN0ICE9PSAnYm9vbGVhbicgJiYgY3VzdG9tSW5zcGVjdCAhPT0gJ3N5bWJvbCcpIHsKICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiAiY3VzdG9tSW5zcGVjdCIsIGlmIHByb3ZpZGVkLCBtdXN0IGJlIGB0cnVlYCwgYGZhbHNlYCwgb3IgYFwnc3ltYm9sXCdgJyk7CiAgfQoKICBpZiAoaGFzKG9wdHMsICdpbmRlbnQnKSAmJiBvcHRzLmluZGVudCAhPT0gbnVsbCAmJiBvcHRzLmluZGVudCAhPT0gJ1x0JyAmJiAhKHBhcnNlSW50KG9wdHMuaW5kZW50LCAxMCkgPT09IG9wdHMuaW5kZW50ICYmIG9wdHMuaW5kZW50ID4gMCkpIHsKICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiAiaW5kZW50IiBtdXN0IGJlICJcXHQiLCBhbiBpbnRlZ2VyID4gMCwgb3IgYG51bGxgJyk7CiAgfQoKICBpZiAoaGFzKG9wdHMsICdudW1lcmljU2VwYXJhdG9yJykgJiYgdHlwZW9mIG9wdHMubnVtZXJpY1NlcGFyYXRvciAhPT0gJ2Jvb2xlYW4nKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gIm51bWVyaWNTZXBhcmF0b3IiLCBpZiBwcm92aWRlZCwgbXVzdCBiZSBgdHJ1ZWAgb3IgYGZhbHNlYCcpOwogIH0KCiAgdmFyIG51bWVyaWNTZXBhcmF0b3IgPSBvcHRzLm51bWVyaWNTZXBhcmF0b3I7CgogIGlmICh0eXBlb2Ygb2JqID09PSAndW5kZWZpbmVkJykgewogICAgcmV0dXJuICd1bmRlZmluZWQnOwogIH0KCiAgaWYgKG9iaiA9PT0gbnVsbCkgewogICAgcmV0dXJuICdudWxsJzsKICB9CgogIGlmICh0eXBlb2Ygb2JqID09PSAnYm9vbGVhbicpIHsKICAgIHJldHVybiBvYmogPyAndHJ1ZScgOiAnZmFsc2UnOwogIH0KCiAgaWYgKHR5cGVvZiBvYmogPT09ICdzdHJpbmcnKSB7CiAgICByZXR1cm4gaW5zcGVjdFN0cmluZyhvYmosIG9wdHMpOwogIH0KCiAgaWYgKHR5cGVvZiBvYmogPT09ICdudW1iZXInKSB7CiAgICBpZiAob2JqID09PSAwKSB7CiAgICAgIHJldHVybiBJbmZpbml0eSAvIG9iaiA+IDAgPyAnMCcgOiAnLTAnOwogICAgfQoKICAgIHZhciBzdHIgPSBTdHJpbmcob2JqKTsKICAgIHJldHVybiBudW1lcmljU2VwYXJhdG9yID8gYWRkTnVtZXJpY1NlcGFyYXRvcihvYmosIHN0cikgOiBzdHI7CiAgfQoKICBpZiAodHlwZW9mIG9iaiA9PT0gJ2JpZ2ludCcpIHsKICAgIHZhciBiaWdJbnRTdHIgPSBTdHJpbmcob2JqKSArICduJzsKICAgIHJldHVybiBudW1lcmljU2VwYXJhdG9yID8gYWRkTnVtZXJpY1NlcGFyYXRvcihvYmosIGJpZ0ludFN0cikgOiBiaWdJbnRTdHI7CiAgfQoKICB2YXIgbWF4RGVwdGggPSB0eXBlb2Ygb3B0cy5kZXB0aCA9PT0gJ3VuZGVmaW5lZCcgPyA1IDogb3B0cy5kZXB0aDsKCiAgaWYgKHR5cGVvZiBkZXB0aCA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgIGRlcHRoID0gMDsKICB9CgogIGlmIChkZXB0aCA+PSBtYXhEZXB0aCAmJiBtYXhEZXB0aCA+IDAgJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHsKICAgIHJldHVybiBpc0FycmF5KG9iaikgPyAnW0FycmF5XScgOiAnW09iamVjdF0nOwogIH0KCiAgdmFyIGluZGVudCA9IGdldEluZGVudChvcHRzLCBkZXB0aCk7CgogIGlmICh0eXBlb2Ygc2VlbiA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgIHNlZW4gPSBbXTsKICB9IGVsc2UgaWYgKGluZGV4T2Yoc2Vlbiwgb2JqKSA+PSAwKSB7CiAgICByZXR1cm4gJ1tDaXJjdWxhcl0nOwogIH0KCiAgZnVuY3Rpb24gaW5zcGVjdCh2YWx1ZSwgZnJvbSwgbm9JbmRlbnQpIHsKICAgIGlmIChmcm9tKSB7CiAgICAgIHNlZW4gPSAkYXJyU2xpY2UuY2FsbChzZWVuKTsKICAgICAgc2Vlbi5wdXNoKGZyb20pOwogICAgfQoKICAgIGlmIChub0luZGVudCkgewogICAgICB2YXIgbmV3T3B0cyA9IHsKICAgICAgICBkZXB0aDogb3B0cy5kZXB0aAogICAgICB9OwoKICAgICAgaWYgKGhhcyhvcHRzLCAncXVvdGVTdHlsZScpKSB7CiAgICAgICAgbmV3T3B0cy5xdW90ZVN0eWxlID0gb3B0cy5xdW90ZVN0eWxlOwogICAgICB9CgogICAgICByZXR1cm4gaW5zcGVjdF8odmFsdWUsIG5ld09wdHMsIGRlcHRoICsgMSwgc2Vlbik7CiAgICB9CgogICAgcmV0dXJuIGluc3BlY3RfKHZhbHVlLCBvcHRzLCBkZXB0aCArIDEsIHNlZW4pOwogIH0KCiAgaWYgKHR5cGVvZiBvYmogPT09ICdmdW5jdGlvbicgJiYgIWlzUmVnRXhwKG9iaikpIHsKICAgIC8vIGluIG9sZGVyIGVuZ2luZXMsIHJlZ2V4ZXMgYXJlIGNhbGxhYmxlCiAgICB2YXIgbmFtZSA9IG5hbWVPZihvYmopOwogICAgdmFyIGtleXMgPSBhcnJPYmpLZXlzKG9iaiwgaW5zcGVjdCk7CiAgICByZXR1cm4gJ1tGdW5jdGlvbicgKyAobmFtZSA/ICc6ICcgKyBuYW1lIDogJyAoYW5vbnltb3VzKScpICsgJ10nICsgKGtleXMubGVuZ3RoID4gMCA/ICcgeyAnICsgJGpvaW4uY2FsbChrZXlzLCAnLCAnKSArICcgfScgOiAnJyk7CiAgfQoKICBpZiAoaXNTeW1ib2wob2JqKSkgewogICAgdmFyIHN5bVN0cmluZyA9IGhhc1NoYW1tZWRTeW1ib2xzID8gJHJlcGxhY2UuY2FsbChTdHJpbmcob2JqKSwgL14oU3ltYm9sXCguKlwpKV9bXildKiQvLCAnJDEnKSA6IHN5bVRvU3RyaW5nLmNhbGwob2JqKTsKICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiAhaGFzU2hhbW1lZFN5bWJvbHMgPyBtYXJrQm94ZWQoc3ltU3RyaW5nKSA6IHN5bVN0cmluZzsKICB9CgogIGlmIChpc0VsZW1lbnQob2JqKSkgewogICAgdmFyIHMgPSAnPCcgKyAkdG9Mb3dlckNhc2UuY2FsbChTdHJpbmcob2JqLm5vZGVOYW1lKSk7CiAgICB2YXIgYXR0cnMgPSBvYmouYXR0cmlidXRlcyB8fCBbXTsKCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHMgKz0gJyAnICsgYXR0cnNbaV0ubmFtZSArICc9JyArIHdyYXBRdW90ZXMocXVvdGUoYXR0cnNbaV0udmFsdWUpLCAnZG91YmxlJywgb3B0cyk7CiAgICB9CgogICAgcyArPSAnPic7CgogICAgaWYgKG9iai5jaGlsZE5vZGVzICYmIG9iai5jaGlsZE5vZGVzLmxlbmd0aCkgewogICAgICBzICs9ICcuLi4nOwogICAgfQoKICAgIHMgKz0gJzwvJyArICR0b0xvd2VyQ2FzZS5jYWxsKFN0cmluZyhvYmoubm9kZU5hbWUpKSArICc+JzsKICAgIHJldHVybiBzOwogIH0KCiAgaWYgKGlzQXJyYXkob2JqKSkgewogICAgaWYgKG9iai5sZW5ndGggPT09IDApIHsKICAgICAgcmV0dXJuICdbXSc7CiAgICB9CgogICAgdmFyIHhzID0gYXJyT2JqS2V5cyhvYmosIGluc3BlY3QpOwoKICAgIGlmIChpbmRlbnQgJiYgIXNpbmdsZUxpbmVWYWx1ZXMoeHMpKSB7CiAgICAgIHJldHVybiAnWycgKyBpbmRlbnRlZEpvaW4oeHMsIGluZGVudCkgKyAnXSc7CiAgICB9CgogICAgcmV0dXJuICdbICcgKyAkam9pbi5jYWxsKHhzLCAnLCAnKSArICcgXSc7CiAgfQoKICBpZiAoaXNFcnJvcihvYmopKSB7CiAgICB2YXIgcGFydHMgPSBhcnJPYmpLZXlzKG9iaiwgaW5zcGVjdCk7CgogICAgaWYgKCEoJ2NhdXNlJyBpbiBFcnJvci5wcm90b3R5cGUpICYmICdjYXVzZScgaW4gb2JqICYmICFpc0VudW1lcmFibGUuY2FsbChvYmosICdjYXVzZScpKSB7CiAgICAgIHJldHVybiAneyBbJyArIFN0cmluZyhvYmopICsgJ10gJyArICRqb2luLmNhbGwoJGNvbmNhdC5jYWxsKCdbY2F1c2VdOiAnICsgaW5zcGVjdChvYmouY2F1c2UpLCBwYXJ0cyksICcsICcpICsgJyB9JzsKICAgIH0KCiAgICBpZiAocGFydHMubGVuZ3RoID09PSAwKSB7CiAgICAgIHJldHVybiAnWycgKyBTdHJpbmcob2JqKSArICddJzsKICAgIH0KCiAgICByZXR1cm4gJ3sgWycgKyBTdHJpbmcob2JqKSArICddICcgKyAkam9pbi5jYWxsKHBhcnRzLCAnLCAnKSArICcgfSc7CiAgfQoKICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgY3VzdG9tSW5zcGVjdCkgewogICAgaWYgKGluc3BlY3RTeW1ib2wgJiYgdHlwZW9mIG9ialtpbnNwZWN0U3ltYm9sXSA9PT0gJ2Z1bmN0aW9uJyAmJiB1dGlsSW5zcGVjdCkgewogICAgICByZXR1cm4gdXRpbEluc3BlY3Qob2JqLCB7CiAgICAgICAgZGVwdGg6IG1heERlcHRoIC0gZGVwdGgKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKGN1c3RvbUluc3BlY3QgIT09ICdzeW1ib2wnICYmIHR5cGVvZiBvYmouaW5zcGVjdCA9PT0gJ2Z1bmN0aW9uJykgewogICAgICByZXR1cm4gb2JqLmluc3BlY3QoKTsKICAgIH0KICB9CgogIGlmIChpc01hcChvYmopKSB7CiAgICB2YXIgbWFwUGFydHMgPSBbXTsKICAgIG1hcEZvckVhY2guY2FsbChvYmosIGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7CiAgICAgIG1hcFBhcnRzLnB1c2goaW5zcGVjdChrZXksIG9iaiwgdHJ1ZSkgKyAnID0+ICcgKyBpbnNwZWN0KHZhbHVlLCBvYmopKTsKICAgIH0pOwogICAgcmV0dXJuIGNvbGxlY3Rpb25PZignTWFwJywgbWFwU2l6ZS5jYWxsKG9iaiksIG1hcFBhcnRzLCBpbmRlbnQpOwogIH0KCiAgaWYgKGlzU2V0KG9iaikpIHsKICAgIHZhciBzZXRQYXJ0cyA9IFtdOwogICAgc2V0Rm9yRWFjaC5jYWxsKG9iaiwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHNldFBhcnRzLnB1c2goaW5zcGVjdCh2YWx1ZSwgb2JqKSk7CiAgICB9KTsKICAgIHJldHVybiBjb2xsZWN0aW9uT2YoJ1NldCcsIHNldFNpemUuY2FsbChvYmopLCBzZXRQYXJ0cywgaW5kZW50KTsKICB9CgogIGlmIChpc1dlYWtNYXAob2JqKSkgewogICAgcmV0dXJuIHdlYWtDb2xsZWN0aW9uT2YoJ1dlYWtNYXAnKTsKICB9CgogIGlmIChpc1dlYWtTZXQob2JqKSkgewogICAgcmV0dXJuIHdlYWtDb2xsZWN0aW9uT2YoJ1dlYWtTZXQnKTsKICB9CgogIGlmIChpc1dlYWtSZWYob2JqKSkgewogICAgcmV0dXJuIHdlYWtDb2xsZWN0aW9uT2YoJ1dlYWtSZWYnKTsKICB9CgogIGlmIChpc051bWJlcihvYmopKSB7CiAgICByZXR1cm4gbWFya0JveGVkKGluc3BlY3QoTnVtYmVyKG9iaikpKTsKICB9CgogIGlmIChpc0JpZ0ludChvYmopKSB7CiAgICByZXR1cm4gbWFya0JveGVkKGluc3BlY3QoYmlnSW50VmFsdWVPZi5jYWxsKG9iaikpKTsKICB9CgogIGlmIChpc0Jvb2xlYW4ob2JqKSkgewogICAgcmV0dXJuIG1hcmtCb3hlZChib29sZWFuVmFsdWVPZi5jYWxsKG9iaikpOwogIH0KCiAgaWYgKGlzU3RyaW5nKG9iaikpIHsKICAgIHJldHVybiBtYXJrQm94ZWQoaW5zcGVjdChTdHJpbmcob2JqKSkpOwogIH0KCiAgaWYgKCFpc0RhdGUob2JqKSAmJiAhaXNSZWdFeHAob2JqKSkgewogICAgdmFyIHlzID0gYXJyT2JqS2V5cyhvYmosIGluc3BlY3QpOwogICAgdmFyIGlzUGxhaW5PYmplY3QgPSBnUE8gPyBnUE8ob2JqKSA9PT0gT2JqZWN0LnByb3RvdHlwZSA6IG9iaiBpbnN0YW5jZW9mIE9iamVjdCB8fCBvYmouY29uc3RydWN0b3IgPT09IE9iamVjdDsKICAgIHZhciBwcm90b1RhZyA9IG9iaiBpbnN0YW5jZW9mIE9iamVjdCA/ICcnIDogJ251bGwgcHJvdG90eXBlJzsKICAgIHZhciBzdHJpbmdUYWcgPSAhaXNQbGFpbk9iamVjdCAmJiB0b1N0cmluZ1RhZyAmJiBPYmplY3Qob2JqKSA9PT0gb2JqICYmIHRvU3RyaW5nVGFnIGluIG9iaiA/ICRzbGljZS5jYWxsKHRvU3RyKG9iaiksIDgsIC0xKSA6IHByb3RvVGFnID8gJ09iamVjdCcgOiAnJzsKICAgIHZhciBjb25zdHJ1Y3RvclRhZyA9IGlzUGxhaW5PYmplY3QgfHwgdHlwZW9mIG9iai5jb25zdHJ1Y3RvciAhPT0gJ2Z1bmN0aW9uJyA/ICcnIDogb2JqLmNvbnN0cnVjdG9yLm5hbWUgPyBvYmouY29uc3RydWN0b3IubmFtZSArICcgJyA6ICcnOwogICAgdmFyIHRhZyA9IGNvbnN0cnVjdG9yVGFnICsgKHN0cmluZ1RhZyB8fCBwcm90b1RhZyA/ICdbJyArICRqb2luLmNhbGwoJGNvbmNhdC5jYWxsKFtdLCBzdHJpbmdUYWcgfHwgW10sIHByb3RvVGFnIHx8IFtdKSwgJzogJykgKyAnXSAnIDogJycpOwoKICAgIGlmICh5cy5sZW5ndGggPT09IDApIHsKICAgICAgcmV0dXJuIHRhZyArICd7fSc7CiAgICB9CgogICAgaWYgKGluZGVudCkgewogICAgICByZXR1cm4gdGFnICsgJ3snICsgaW5kZW50ZWRKb2luKHlzLCBpbmRlbnQpICsgJ30nOwogICAgfQoKICAgIHJldHVybiB0YWcgKyAneyAnICsgJGpvaW4uY2FsbCh5cywgJywgJykgKyAnIH0nOwogIH0KCiAgcmV0dXJuIFN0cmluZyhvYmopOwp9OwoKZnVuY3Rpb24gd3JhcFF1b3RlcyhzLCBkZWZhdWx0U3R5bGUsIG9wdHMpIHsKICB2YXIgcXVvdGVDaGFyID0gKG9wdHMucXVvdGVTdHlsZSB8fCBkZWZhdWx0U3R5bGUpID09PSAnZG91YmxlJyA/ICciJyA6ICInIjsKICByZXR1cm4gcXVvdGVDaGFyICsgcyArIHF1b3RlQ2hhcjsKfQoKZnVuY3Rpb24gcXVvdGUocykgewogIHJldHVybiAkcmVwbGFjZS5jYWxsKFN0cmluZyhzKSwgLyIvZywgJyZxdW90OycpOwp9CgpmdW5jdGlvbiBpc0FycmF5KG9iaikgewogIHJldHVybiB0b1N0cihvYmopID09PSAnW29iamVjdCBBcnJheV0nICYmICghdG9TdHJpbmdUYWcgfHwgISh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiB0b1N0cmluZ1RhZyBpbiBvYmopKTsKfQoKZnVuY3Rpb24gaXNEYXRlKG9iaikgewogIHJldHVybiB0b1N0cihvYmopID09PSAnW29iamVjdCBEYXRlXScgJiYgKCF0b1N0cmluZ1RhZyB8fCAhKHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIHRvU3RyaW5nVGFnIGluIG9iaikpOwp9CgpmdW5jdGlvbiBpc1JlZ0V4cChvYmopIHsKICByZXR1cm4gdG9TdHIob2JqKSA9PT0gJ1tvYmplY3QgUmVnRXhwXScgJiYgKCF0b1N0cmluZ1RhZyB8fCAhKHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIHRvU3RyaW5nVGFnIGluIG9iaikpOwp9CgpmdW5jdGlvbiBpc0Vycm9yKG9iaikgewogIHJldHVybiB0b1N0cihvYmopID09PSAnW29iamVjdCBFcnJvcl0nICYmICghdG9TdHJpbmdUYWcgfHwgISh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiB0b1N0cmluZ1RhZyBpbiBvYmopKTsKfQoKZnVuY3Rpb24gaXNTdHJpbmcob2JqKSB7CiAgcmV0dXJuIHRvU3RyKG9iaikgPT09ICdbb2JqZWN0IFN0cmluZ10nICYmICghdG9TdHJpbmdUYWcgfHwgISh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiB0b1N0cmluZ1RhZyBpbiBvYmopKTsKfQoKZnVuY3Rpb24gaXNOdW1iZXIob2JqKSB7CiAgcmV0dXJuIHRvU3RyKG9iaikgPT09ICdbb2JqZWN0IE51bWJlcl0nICYmICghdG9TdHJpbmdUYWcgfHwgISh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiB0b1N0cmluZ1RhZyBpbiBvYmopKTsKfQoKZnVuY3Rpb24gaXNCb29sZWFuKG9iaikgewogIHJldHVybiB0b1N0cihvYmopID09PSAnW29iamVjdCBCb29sZWFuXScgJiYgKCF0b1N0cmluZ1RhZyB8fCAhKHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIHRvU3RyaW5nVGFnIGluIG9iaikpOwp9IC8vIFN5bWJvbCBhbmQgQmlnSW50IGRvIGhhdmUgU3ltYm9sLnRvU3RyaW5nVGFnIGJ5IHNwZWMsIHNvIHRoYXQgY2FuJ3QgYmUgdXNlZCB0byBlbGltaW5hdGUgZmFsc2UgcG9zaXRpdmVzCgoKZnVuY3Rpb24gaXNTeW1ib2wob2JqKSB7CiAgaWYgKGhhc1NoYW1tZWRTeW1ib2xzKSB7CiAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIG9iaiBpbnN0YW5jZW9mIFN5bWJvbDsKICB9CgogIGlmICh0eXBlb2Ygb2JqID09PSAnc3ltYm9sJykgewogICAgcmV0dXJuIHRydWU7CiAgfQoKICBpZiAoIW9iaiB8fCB0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCAhc3ltVG9TdHJpbmcpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHRyeSB7CiAgICBzeW1Ub1N0cmluZy5jYWxsKG9iaik7CiAgICByZXR1cm4gdHJ1ZTsKICB9IGNhdGNoIChlKSB7fQoKICByZXR1cm4gZmFsc2U7Cn0KCmZ1bmN0aW9uIGlzQmlnSW50KG9iaikgewogIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8ICFiaWdJbnRWYWx1ZU9mKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICB0cnkgewogICAgYmlnSW50VmFsdWVPZi5jYWxsKG9iaik7CiAgICByZXR1cm4gdHJ1ZTsKICB9IGNhdGNoIChlKSB7fQoKICByZXR1cm4gZmFsc2U7Cn0KCnZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5IHx8IGZ1bmN0aW9uIChrZXkpIHsKICByZXR1cm4ga2V5IGluIHRoaXM7Cn07CgpmdW5jdGlvbiBoYXMob2JqLCBrZXkpIHsKICByZXR1cm4gaGFzT3duLmNhbGwob2JqLCBrZXkpOwp9CgpmdW5jdGlvbiB0b1N0cihvYmopIHsKICByZXR1cm4gb2JqZWN0VG9TdHJpbmcuY2FsbChvYmopOwp9CgpmdW5jdGlvbiBuYW1lT2YoZikgewogIGlmIChmLm5hbWUpIHsKICAgIHJldHVybiBmLm5hbWU7CiAgfQoKICB2YXIgbSA9ICRtYXRjaC5jYWxsKGZ1bmN0aW9uVG9TdHJpbmcuY2FsbChmKSwgL15mdW5jdGlvblxzKihbXHckXSspLyk7CgogIGlmIChtKSB7CiAgICByZXR1cm4gbVsxXTsKICB9CgogIHJldHVybiBudWxsOwp9CgpmdW5jdGlvbiBpbmRleE9mKHhzLCB4KSB7CiAgaWYgKHhzLmluZGV4T2YpIHsKICAgIHJldHVybiB4cy5pbmRleE9mKHgpOwogIH0KCiAgZm9yICh2YXIgaSA9IDAsIGwgPSB4cy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgIGlmICh4c1tpXSA9PT0geCkgewogICAgICByZXR1cm4gaTsKICAgIH0KICB9CgogIHJldHVybiAtMTsKfQoKZnVuY3Rpb24gaXNNYXAoeCkgewogIGlmICghbWFwU2l6ZSB8fCAheCB8fCB0eXBlb2YgeCAhPT0gJ29iamVjdCcpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHRyeSB7CiAgICBtYXBTaXplLmNhbGwoeCk7CgogICAgdHJ5IHsKICAgICAgc2V0U2l6ZS5jYWxsKHgpOwogICAgfSBjYXRjaCAocykgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICByZXR1cm4geCBpbnN0YW5jZW9mIE1hcDsgLy8gY29yZS1qcyB3b3JrYXJvdW5kLCBwcmUtdjIuNS4wCiAgfSBjYXRjaCAoZSkge30KCiAgcmV0dXJuIGZhbHNlOwp9CgpmdW5jdGlvbiBpc1dlYWtNYXAoeCkgewogIGlmICghd2Vha01hcEhhcyB8fCAheCB8fCB0eXBlb2YgeCAhPT0gJ29iamVjdCcpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHRyeSB7CiAgICB3ZWFrTWFwSGFzLmNhbGwoeCwgd2Vha01hcEhhcyk7CgogICAgdHJ5IHsKICAgICAgd2Vha1NldEhhcy5jYWxsKHgsIHdlYWtTZXRIYXMpOwogICAgfSBjYXRjaCAocykgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICByZXR1cm4geCBpbnN0YW5jZW9mIFdlYWtNYXA7IC8vIGNvcmUtanMgd29ya2Fyb3VuZCwgcHJlLXYyLjUuMAogIH0gY2F0Y2ggKGUpIHt9CgogIHJldHVybiBmYWxzZTsKfQoKZnVuY3Rpb24gaXNXZWFrUmVmKHgpIHsKICBpZiAoIXdlYWtSZWZEZXJlZiB8fCAheCB8fCB0eXBlb2YgeCAhPT0gJ29iamVjdCcpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHRyeSB7CiAgICB3ZWFrUmVmRGVyZWYuY2FsbCh4KTsKICAgIHJldHVybiB0cnVlOwogIH0gY2F0Y2ggKGUpIHt9CgogIHJldHVybiBmYWxzZTsKfQoKZnVuY3Rpb24gaXNTZXQoeCkgewogIGlmICghc2V0U2l6ZSB8fCAheCB8fCB0eXBlb2YgeCAhPT0gJ29iamVjdCcpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHRyeSB7CiAgICBzZXRTaXplLmNhbGwoeCk7CgogICAgdHJ5IHsKICAgICAgbWFwU2l6ZS5jYWxsKHgpOwogICAgfSBjYXRjaCAobSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICByZXR1cm4geCBpbnN0YW5jZW9mIFNldDsgLy8gY29yZS1qcyB3b3JrYXJvdW5kLCBwcmUtdjIuNS4wCiAgfSBjYXRjaCAoZSkge30KCiAgcmV0dXJuIGZhbHNlOwp9CgpmdW5jdGlvbiBpc1dlYWtTZXQoeCkgewogIGlmICghd2Vha1NldEhhcyB8fCAheCB8fCB0eXBlb2YgeCAhPT0gJ29iamVjdCcpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHRyeSB7CiAgICB3ZWFrU2V0SGFzLmNhbGwoeCwgd2Vha1NldEhhcyk7CgogICAgdHJ5IHsKICAgICAgd2Vha01hcEhhcy5jYWxsKHgsIHdlYWtNYXBIYXMpOwogICAgfSBjYXRjaCAocykgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICByZXR1cm4geCBpbnN0YW5jZW9mIFdlYWtTZXQ7IC8vIGNvcmUtanMgd29ya2Fyb3VuZCwgcHJlLXYyLjUuMAogIH0gY2F0Y2ggKGUpIHt9CgogIHJldHVybiBmYWxzZTsKfQoKZnVuY3Rpb24gaXNFbGVtZW50KHgpIHsKICBpZiAoIXggfHwgdHlwZW9mIHggIT09ICdvYmplY3QnKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBpZiAodHlwZW9mIEhUTUxFbGVtZW50ICE9PSAndW5kZWZpbmVkJyAmJiB4IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgcmV0dXJuIHR5cGVvZiB4Lm5vZGVOYW1lID09PSAnc3RyaW5nJyAmJiB0eXBlb2YgeC5nZXRBdHRyaWJ1dGUgPT09ICdmdW5jdGlvbic7Cn0KCmZ1bmN0aW9uIGluc3BlY3RTdHJpbmcoc3RyLCBvcHRzKSB7CiAgaWYgKHN0ci5sZW5ndGggPiBvcHRzLm1heFN0cmluZ0xlbmd0aCkgewogICAgdmFyIHJlbWFpbmluZyA9IHN0ci5sZW5ndGggLSBvcHRzLm1heFN0cmluZ0xlbmd0aDsKICAgIHZhciB0cmFpbGVyID0gJy4uLiAnICsgcmVtYWluaW5nICsgJyBtb3JlIGNoYXJhY3RlcicgKyAocmVtYWluaW5nID4gMSA/ICdzJyA6ICcnKTsKICAgIHJldHVybiBpbnNwZWN0U3RyaW5nKCRzbGljZS5jYWxsKHN0ciwgMCwgb3B0cy5tYXhTdHJpbmdMZW5ndGgpLCBvcHRzKSArIHRyYWlsZXI7CiAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udHJvbC1yZWdleAoKCiAgdmFyIHMgPSAkcmVwbGFjZS5jYWxsKCRyZXBsYWNlLmNhbGwoc3RyLCAvKFsnXFxdKS9nLCAnXFwkMScpLCAvW1x4MDAtXHgxZl0vZywgbG93Ynl0ZSk7CiAgcmV0dXJuIHdyYXBRdW90ZXMocywgJ3NpbmdsZScsIG9wdHMpOwp9CgpmdW5jdGlvbiBsb3dieXRlKGMpIHsKICB2YXIgbiA9IGMuY2hhckNvZGVBdCgwKTsKICB2YXIgeCA9IHsKICAgIDg6ICdiJywKICAgIDk6ICd0JywKICAgIDEwOiAnbicsCiAgICAxMjogJ2YnLAogICAgMTM6ICdyJwogIH1bbl07CgogIGlmICh4KSB7CiAgICByZXR1cm4gJ1xcJyArIHg7CiAgfQoKICByZXR1cm4gJ1xceCcgKyAobiA8IDB4MTAgPyAnMCcgOiAnJykgKyAkdG9VcHBlckNhc2UuY2FsbChuLnRvU3RyaW5nKDE2KSk7Cn0KCmZ1bmN0aW9uIG1hcmtCb3hlZChzdHIpIHsKICByZXR1cm4gJ09iamVjdCgnICsgc3RyICsgJyknOwp9CgpmdW5jdGlvbiB3ZWFrQ29sbGVjdGlvbk9mKHR5cGUpIHsKICByZXR1cm4gdHlwZSArICcgeyA/IH0nOwp9CgpmdW5jdGlvbiBjb2xsZWN0aW9uT2YodHlwZSwgc2l6ZSwgZW50cmllcywgaW5kZW50KSB7CiAgdmFyIGpvaW5lZEVudHJpZXMgPSBpbmRlbnQgPyBpbmRlbnRlZEpvaW4oZW50cmllcywgaW5kZW50KSA6ICRqb2luLmNhbGwoZW50cmllcywgJywgJyk7CiAgcmV0dXJuIHR5cGUgKyAnICgnICsgc2l6ZSArICcpIHsnICsgam9pbmVkRW50cmllcyArICd9JzsKfQoKZnVuY3Rpb24gc2luZ2xlTGluZVZhbHVlcyh4cykgewogIGZvciAodmFyIGkgPSAwOyBpIDwgeHMubGVuZ3RoOyBpKyspIHsKICAgIGlmIChpbmRleE9mKHhzW2ldLCAnXG4nKSA+PSAwKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9CgogIHJldHVybiB0cnVlOwp9CgpmdW5jdGlvbiBnZXRJbmRlbnQob3B0cywgZGVwdGgpIHsKICB2YXIgYmFzZUluZGVudDsKCiAgaWYgKG9wdHMuaW5kZW50ID09PSAnXHQnKSB7CiAgICBiYXNlSW5kZW50ID0gJ1x0JzsKICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRzLmluZGVudCA9PT0gJ251bWJlcicgJiYgb3B0cy5pbmRlbnQgPiAwKSB7CiAgICBiYXNlSW5kZW50ID0gJGpvaW4uY2FsbChBcnJheShvcHRzLmluZGVudCArIDEpLCAnICcpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gbnVsbDsKICB9CgogIHJldHVybiB7CiAgICBiYXNlOiBiYXNlSW5kZW50LAogICAgcHJldjogJGpvaW4uY2FsbChBcnJheShkZXB0aCArIDEpLCBiYXNlSW5kZW50KQogIH07Cn0KCmZ1bmN0aW9uIGluZGVudGVkSm9pbih4cywgaW5kZW50KSB7CiAgaWYgKHhzLmxlbmd0aCA9PT0gMCkgewogICAgcmV0dXJuICcnOwogIH0KCiAgdmFyIGxpbmVKb2luZXIgPSAnXG4nICsgaW5kZW50LnByZXYgKyBpbmRlbnQuYmFzZTsKICByZXR1cm4gbGluZUpvaW5lciArICRqb2luLmNhbGwoeHMsICcsJyArIGxpbmVKb2luZXIpICsgJ1xuJyArIGluZGVudC5wcmV2Owp9CgpmdW5jdGlvbiBhcnJPYmpLZXlzKG9iaiwgaW5zcGVjdCkgewogIHZhciBpc0FyciA9IGlzQXJyYXkob2JqKTsKICB2YXIgeHMgPSBbXTsKCiAgaWYgKGlzQXJyKSB7CiAgICB4cy5sZW5ndGggPSBvYmoubGVuZ3RoOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JqLmxlbmd0aDsgaSsrKSB7CiAgICAgIHhzW2ldID0gaGFzKG9iaiwgaSkgPyBpbnNwZWN0KG9ialtpXSwgb2JqKSA6ICcnOwogICAgfQogIH0KCiAgdmFyIHN5bXMgPSB0eXBlb2YgZ09QUyA9PT0gJ2Z1bmN0aW9uJyA/IGdPUFMob2JqKSA6IFtdOwogIHZhciBzeW1NYXA7CgogIGlmIChoYXNTaGFtbWVkU3ltYm9scykgewogICAgc3ltTWFwID0ge307CgogICAgZm9yICh2YXIgayA9IDA7IGsgPCBzeW1zLmxlbmd0aDsgaysrKSB7CiAgICAgIHN5bU1hcFsnJCcgKyBzeW1zW2tdXSA9IHN5bXNba107CiAgICB9CiAgfQoKICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4CiAgICBpZiAoIWhhcyhvYmosIGtleSkpIHsKICAgICAgY29udGludWU7CiAgICB9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXgsIG5vLWNvbnRpbnVlCgoKICAgIGlmIChpc0FyciAmJiBTdHJpbmcoTnVtYmVyKGtleSkpID09PSBrZXkgJiYga2V5IDwgb2JqLmxlbmd0aCkgewogICAgICBjb250aW51ZTsKICAgIH0gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheCwgbm8tY29udGludWUKCgogICAgaWYgKGhhc1NoYW1tZWRTeW1ib2xzICYmIHN5bU1hcFsnJCcgKyBrZXldIGluc3RhbmNlb2YgU3ltYm9sKSB7CiAgICAgIC8vIHRoaXMgaXMgdG8gcHJldmVudCBzaGFtbWVkIFN5bWJvbHMsIHdoaWNoIGFyZSBzdG9yZWQgYXMgc3RyaW5ncywgZnJvbSBiZWluZyBpbmNsdWRlZCBpbiB0aGUgc3RyaW5nIGtleSBzZWN0aW9uCiAgICAgIGNvbnRpbnVlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4LCBuby1jb250aW51ZQogICAgfSBlbHNlIGlmICgkdGVzdC5jYWxsKC9bXlx3JF0vLCBrZXkpKSB7CiAgICAgIHhzLnB1c2goaW5zcGVjdChrZXksIG9iaikgKyAnOiAnICsgaW5zcGVjdChvYmpba2V5XSwgb2JqKSk7CiAgICB9IGVsc2UgewogICAgICB4cy5wdXNoKGtleSArICc6ICcgKyBpbnNwZWN0KG9ialtrZXldLCBvYmopKTsKICAgIH0KICB9CgogIGlmICh0eXBlb2YgZ09QUyA9PT0gJ2Z1bmN0aW9uJykgewogICAgZm9yICh2YXIgaiA9IDA7IGogPCBzeW1zLmxlbmd0aDsgaisrKSB7CiAgICAgIGlmIChpc0VudW1lcmFibGUuY2FsbChvYmosIHN5bXNbal0pKSB7CiAgICAgICAgeHMucHVzaCgnWycgKyBpbnNwZWN0KHN5bXNbal0pICsgJ106ICcgKyBpbnNwZWN0KG9ialtzeW1zW2pdXSwgb2JqKSk7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiB4czsKfQ=="},null]}