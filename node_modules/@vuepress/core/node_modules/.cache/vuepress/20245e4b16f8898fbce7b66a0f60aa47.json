{"remainingRequest":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/lodash/_memoizeCapped.js","dependencies":[{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/lodash/_memoizeCapped.js","mtime":1661658709897},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1661658709451},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js","mtime":1661658709446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIG1lbW9pemUgPSByZXF1aXJlKCcuL21lbW9pemUnKTsKLyoqIFVzZWQgYXMgdGhlIG1heGltdW0gbWVtb2l6ZSBjYWNoZSBzaXplLiAqLwoKCnZhciBNQVhfTUVNT0laRV9TSVpFID0gNTAwOwovKioKICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1lbW9pemVgIHdoaWNoIGNsZWFycyB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24ncwogKiBjYWNoZSB3aGVuIGl0IGV4Y2VlZHMgYE1BWF9NRU1PSVpFX1NJWkVgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBvdXRwdXQgbWVtb2l6ZWQuCiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IG1lbW9pemVkIGZ1bmN0aW9uLgogKi8KCmZ1bmN0aW9uIG1lbW9pemVDYXBwZWQoZnVuYykgewogIHZhciByZXN1bHQgPSBtZW1vaXplKGZ1bmMsIGZ1bmN0aW9uIChrZXkpIHsKICAgIGlmIChjYWNoZS5zaXplID09PSBNQVhfTUVNT0laRV9TSVpFKSB7CiAgICAgIGNhY2hlLmNsZWFyKCk7CiAgICB9CgogICAgcmV0dXJuIGtleTsKICB9KTsKICB2YXIgY2FjaGUgPSByZXN1bHQuY2FjaGU7CiAgcmV0dXJuIHJlc3VsdDsKfQoKbW9kdWxlLmV4cG9ydHMgPSBtZW1vaXplQ2FwcGVkOw=="},{"version":3,"names":["memoize","require","MAX_MEMOIZE_SIZE","memoizeCapped","func","result","key","cache","size","clear","module","exports"],"sources":["/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/lodash/_memoizeCapped.js"],"sourcesContent":["var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;AAEA;;;AACA,IAAIC,gBAAgB,GAAG,GAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAC3B,IAAIC,MAAM,GAAGL,OAAO,CAACI,IAAD,EAAO,UAASE,GAAT,EAAc;IACvC,IAAIC,KAAK,CAACC,IAAN,KAAeN,gBAAnB,EAAqC;MACnCK,KAAK,CAACE,KAAN;IACD;;IACD,OAAOH,GAAP;EACD,CALmB,CAApB;EAOA,IAAIC,KAAK,GAAGF,MAAM,CAACE,KAAnB;EACA,OAAOF,MAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBR,aAAjB"}]}