{"remainingRequest":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/lodash/_equalByTag.js","dependencies":[{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/lodash/_equalByTag.js","mtime":1661658709897},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1661658709451},{"path":"/Users/mengyu/vuepress-starter/vuepress-starter/node_modules/babel-loader/lib/index.js","mtime":1661658709446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpLAogICAgVWludDhBcnJheSA9IHJlcXVpcmUoJy4vX1VpbnQ4QXJyYXknKSwKICAgIGVxID0gcmVxdWlyZSgnLi9lcScpLAogICAgZXF1YWxBcnJheXMgPSByZXF1aXJlKCcuL19lcXVhbEFycmF5cycpLAogICAgbWFwVG9BcnJheSA9IHJlcXVpcmUoJy4vX21hcFRvQXJyYXknKSwKICAgIHNldFRvQXJyYXkgPSByZXF1aXJlKCcuL19zZXRUb0FycmF5Jyk7Ci8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqLwoKCnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDEsCiAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjsKLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqLwoKdmFyIGJvb2xUYWcgPSAnW29iamVjdCBCb29sZWFuXScsCiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLAogICAgZXJyb3JUYWcgPSAnW29iamVjdCBFcnJvcl0nLAogICAgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsCiAgICBudW1iZXJUYWcgPSAnW29iamVjdCBOdW1iZXJdJywKICAgIHJlZ2V4cFRhZyA9ICdbb2JqZWN0IFJlZ0V4cF0nLAogICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsCiAgICBzdHJpbmdUYWcgPSAnW29iamVjdCBTdHJpbmddJywKICAgIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nOwp2YXIgYXJyYXlCdWZmZXJUYWcgPSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nLAogICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nOwovKiogVXNlZCB0byBjb252ZXJ0IHN5bWJvbHMgdG8gcHJpbWl0aXZlcyBhbmQgc3RyaW5ncy4gKi8KCnZhciBzeW1ib2xQcm90byA9IFN5bWJvbCA/IFN5bWJvbC5wcm90b3R5cGUgOiB1bmRlZmluZWQsCiAgICBzeW1ib2xWYWx1ZU9mID0gc3ltYm9sUHJvdG8gPyBzeW1ib2xQcm90by52YWx1ZU9mIDogdW5kZWZpbmVkOwovKioKICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbERlZXBgIGZvciBjb21wYXJpbmcgb2JqZWN0cyBvZgogKiB0aGUgc2FtZSBgdG9TdHJpbmdUYWdgLgogKgogKiAqKk5vdGU6KiogVGhpcyBmdW5jdGlvbiBvbmx5IHN1cHBvcnRzIGNvbXBhcmluZyB2YWx1ZXMgd2l0aCB0YWdzIG9mCiAqIGBCb29sZWFuYCwgYERhdGVgLCBgRXJyb3JgLCBgTnVtYmVyYCwgYFJlZ0V4cGAsIG9yIGBTdHJpbmdgLgogKgogKiBAcHJpdmF0ZQogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS4KICogQHBhcmFtIHtzdHJpbmd9IHRhZyBUaGUgYHRvU3RyaW5nVGFnYCBvZiB0aGUgb2JqZWN0cyB0byBjb21wYXJlLgogKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy4KICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLgogKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuCiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuCiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLgogKi8KCmZ1bmN0aW9uIGVxdWFsQnlUYWcob2JqZWN0LCBvdGhlciwgdGFnLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7CiAgc3dpdGNoICh0YWcpIHsKICAgIGNhc2UgZGF0YVZpZXdUYWc6CiAgICAgIGlmIChvYmplY3QuYnl0ZUxlbmd0aCAhPSBvdGhlci5ieXRlTGVuZ3RoIHx8IG9iamVjdC5ieXRlT2Zmc2V0ICE9IG90aGVyLmJ5dGVPZmZzZXQpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIG9iamVjdCA9IG9iamVjdC5idWZmZXI7CiAgICAgIG90aGVyID0gb3RoZXIuYnVmZmVyOwoKICAgIGNhc2UgYXJyYXlCdWZmZXJUYWc6CiAgICAgIGlmIChvYmplY3QuYnl0ZUxlbmd0aCAhPSBvdGhlci5ieXRlTGVuZ3RoIHx8ICFlcXVhbEZ1bmMobmV3IFVpbnQ4QXJyYXkob2JqZWN0KSwgbmV3IFVpbnQ4QXJyYXkob3RoZXIpKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CgogICAgY2FzZSBib29sVGFnOgogICAgY2FzZSBkYXRlVGFnOgogICAgY2FzZSBudW1iZXJUYWc6CiAgICAgIC8vIENvZXJjZSBib29sZWFucyB0byBgMWAgb3IgYDBgIGFuZCBkYXRlcyB0byBtaWxsaXNlY29uZHMuCiAgICAgIC8vIEludmFsaWQgZGF0ZXMgYXJlIGNvZXJjZWQgdG8gYE5hTmAuCiAgICAgIHJldHVybiBlcSgrb2JqZWN0LCArb3RoZXIpOwoKICAgIGNhc2UgZXJyb3JUYWc6CiAgICAgIHJldHVybiBvYmplY3QubmFtZSA9PSBvdGhlci5uYW1lICYmIG9iamVjdC5tZXNzYWdlID09IG90aGVyLm1lc3NhZ2U7CgogICAgY2FzZSByZWdleHBUYWc6CiAgICBjYXNlIHN0cmluZ1RhZzoKICAgICAgLy8gQ29lcmNlIHJlZ2V4ZXMgdG8gc3RyaW5ncyBhbmQgdHJlYXQgc3RyaW5ncywgcHJpbWl0aXZlcyBhbmQgb2JqZWN0cywKICAgICAgLy8gYXMgZXF1YWwuIFNlZSBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZwogICAgICAvLyBmb3IgbW9yZSBkZXRhaWxzLgogICAgICByZXR1cm4gb2JqZWN0ID09IG90aGVyICsgJyc7CgogICAgY2FzZSBtYXBUYWc6CiAgICAgIHZhciBjb252ZXJ0ID0gbWFwVG9BcnJheTsKCiAgICBjYXNlIHNldFRhZzoKICAgICAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRzsKICAgICAgY29udmVydCB8fCAoY29udmVydCA9IHNldFRvQXJyYXkpOwoKICAgICAgaWYgKG9iamVjdC5zaXplICE9IG90aGVyLnNpemUgJiYgIWlzUGFydGlhbCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSAvLyBBc3N1bWUgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuCgoKICAgICAgdmFyIHN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTsKCiAgICAgIGlmIChzdGFja2VkKSB7CiAgICAgICAgcmV0dXJuIHN0YWNrZWQgPT0gb3RoZXI7CiAgICAgIH0KCiAgICAgIGJpdG1hc2sgfD0gQ09NUEFSRV9VTk9SREVSRURfRkxBRzsgLy8gUmVjdXJzaXZlbHkgY29tcGFyZSBvYmplY3RzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuCgogICAgICBzdGFjay5zZXQob2JqZWN0LCBvdGhlcik7CiAgICAgIHZhciByZXN1bHQgPSBlcXVhbEFycmF5cyhjb252ZXJ0KG9iamVjdCksIGNvbnZlcnQob3RoZXIpLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKTsKICAgICAgc3RhY2tbJ2RlbGV0ZSddKG9iamVjdCk7CiAgICAgIHJldHVybiByZXN1bHQ7CgogICAgY2FzZSBzeW1ib2xUYWc6CiAgICAgIGlmIChzeW1ib2xWYWx1ZU9mKSB7CiAgICAgICAgcmV0dXJuIHN5bWJvbFZhbHVlT2YuY2FsbChvYmplY3QpID09IHN5bWJvbFZhbHVlT2YuY2FsbChvdGhlcik7CiAgICAgIH0KCiAgfQoKICByZXR1cm4gZmFsc2U7Cn0KCm1vZHVsZS5leHBvcnRzID0gZXF1YWxCeVRhZzs="},null]}